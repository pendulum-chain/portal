name: semantic-release
run-name: ${{ github.actor }} is automatically releasing ðŸš€

on:
  push:
    branches: [ main ]

  workflow_dispatch:

jobs:
  semantic-release:
    name: Running semantic-release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18 ]
    env:
      CI: true

    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.BOT_APP_ID }}
          private_key: ${{ secrets.BOT_PRIVATE_KEY }}

      - name: ðŸ›’ Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ steps.generate_token.outputs.token }}

      - name: ðŸ’¿ Setup Nodejs
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: 'https://npm.pkg.github.com'

      - name: ðŸ’¾ Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: ðŸ’¾ Cache
        uses: actions/cache@v3
        id: yarn-cache
        with:
          path: |
            **/.cache/Cypress
            **/cypress/cache
            **/node_modules
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn

      - name: ðŸ§© Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --immutable --inline-builds

      - name: ðŸ“¦ Release
        run: yarn release
        env:
          NODE_AUTH_TOKEN: ${{ steps.generate_token.outputs.token }}
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}

